{
  "hash": "b4ed9a2713473b651c5f3a1e7d00a3de",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Webscraping the specials and addresses from the posted tables\"\nformat: html\nexecute: \n  freeze: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nxfun::pkg_attach(\"tidyverse\", \n                 \"rvest\", \n                 \"robotstxt\", \n                 \"tidygeocoder\", \n                 \"leaflet\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nAttaching package: 'rvest'\n\n\nThe following object is masked from 'package:readr':\n\n    guess_encoding\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nyear <- 2024\nslug <- \"2024-06-05-ccd-sips\"\nurl <- \"https://centercityphila.org/explore-center-city/ccd-sips/sips-list-view\"\ntotal_pages <- 5\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(here::here(\"blog\", slug, \"R\", \"ccd_sips_functions.R\"))\n```\n:::\n\n\n## Checking the page\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# check page's terms of service\nget_robotstxt(url)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in request_handler_handler(request = request, handler = on_not_found, :\nEvent: on_not_found\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in request_handler_handler(request = request, handler =\non_file_type_mismatch, : Event: on_file_type_mismatch\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in request_handler_handler(request = request, handler =\non_suspect_content, : Event: on_suspect_content\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[robots.txt]\n--------------------------------------\n\n# robots.txt overwrite by: on_suspect_content\n\nUser-agent: *\nAllow: /\n\n\n\n[events]\n--------------------------------------\n\nrequested:   https://centercityphila.org/explore-center-city/ccd-sips/sips-list-view/robots.txt \ndownloaded:  https://centercityphila.org/explore-center-city/ccd-sips/sips-list-view/robots.txt \n\n$on_not_found\n$on_not_found$status_code\n[1] 404\n\n\n$on_file_type_mismatch\n$on_file_type_mismatch$content_type\n[1] \"text/html; charset=utf-8\"\n\n\n$on_suspect_content\n$on_suspect_content$parsable\n[1] FALSE\n\n$on_suspect_content$content_suspect\n[1] TRUE\n\n\n[attributes]\n--------------------------------------\n\nproblems, cached, request, class\n```\n\n\n:::\n:::\n\n\n## Scrape all pages\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable <- map_df(1:total_pages, .f = get_tables, url = url) \n\ntable |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  Name                           Address                          Phone Specials\n  <chr>                          <chr>                            <chr> <chr>   \n1 1225 Raw Sushi and Sake Lounge 1225 Sansom St, Philadelphia, P… 215.… https:/…\n2 13 Patio                       1201 Market St., Philadelphia, … 215.… https:/…\n3 1518 Bar and Grill             1518 Sansom St, Philadelphia, P… 267.… https:/…\n4 Air Grille at Dilworth Park    1 S 15th St, Philadelphia, PA 1… 215.… https:/…\n5 aMuse                          1421 Arch St, Philadelphia, PA … 215.… https:/…\n6 ArtBar at Sonesta Hotel        1800 Market St, Philadelphia, P… 215.… https:/…\n```\n\n\n:::\n\n```{.r .cell-code}\nwrite_rds(table, file = here::here(\"blog\", slug, \"specialsScraped.Rds\"))\n```\n:::\n\n\n## Geocoding\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspecials <- read_rds(file = here::here(\"blog\", slug, \"specialsScraped.Rds\"))\n\nspecials_geocoded <- \n  specials |> \n  geocode(Address, method = \"google\", \n          lat = \"Latitude\", long = \"Longitude\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPassing 88 addresses to the Google single address geocoder\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nQuery completed in: 5.8 seconds\n```\n\n\n:::\n\n```{.r .cell-code}\nspecials_geocoded |> \n  write_rds(file = here::here(\"blog\", slug, \"specialsGeocoded.Rds\"))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}